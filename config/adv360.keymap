
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC        &kp N1        &kp N2        &kp N3  &kp N4  &kp N5                   &tog 1                                                                             &mo 3  &kp N6  &kp N7     &kp N8   &kp N9          &kp N0  &kp MINUS
   &kp TAB         &kp Q         &kp W         &kp F   &kp P   &kp B                &kp PSCRN                                                                             &none   &kp J   &kp L      &kp U    &kp Y        &kp SEMI   &kp BSLH
   &kp ESC         &kp A         &kp R         &kp S   &kp T   &kp G                  &kp INS  &kp LEFT_ALT   &kp LGUI   &none   &none  &kp RIGHT_ALT  &kp RIGHT_WIN      &none   &kp M   &kp N      &kp E    &kp I           &kp O    &kp SQT
 &kp LSHFT         &kp Z         &kp X         &kp C   &kp D   &kp V                    &none         &none  &kp LCTRL   &none   &none      &kp RCTRL          &none      &none   &kp K   &kp H  &kp COMMA  &kp DOT  &kp UNDERSCORE  &kp RSHFT
     &mo 2  &macro_aa_sh  &macro_ae_sh  &macro_oe_sh   &mo 1                    &kp BACKSPACE         &mo 4    &kp DEL                      &kp ENTER          &mo 2  &kp SPACE           &mo 1     &trans   &trans          &tog 5      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL        &kp N1        &kp N2        &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB         &kp Q         &kp W         &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC  &macro_aa_sh  &macro_ae_sh  &macro_oe_sh      &kp F   &kp G               &none  &kp LCTRL  &kp LALT   &none   &none   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT         &kp Z         &kp X         &kp C      &kp V   &kp B               &none      &none  &kp HOME   &none   &none  &kp PG_UP      &none      &none   &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2     &kp GRAVE      &kp CAPS      &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1      &kp F2          &kp F3            &kp F4       &kp F5       &kp F6            &tog 1                                                   &mo 3             &kp F7         &kp F8                &kp F9                &kp F10        &kp F11  &kp F12
 &trans  &kp DOLLAR  &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp KP_PLUS    &kp CARET             &none                                                   &none  &kp DOUBLE_QUOTES       &kp STAR      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON   &trans
 &trans   &kp EQUAL          &kp LT  &kp GREATER_THAN    &kp MINUS     &kp HASH             &none  &trans  &trans   &none   &none  &trans  &trans   &none   &kp SINGLE_QUOTE      &kp SLASH  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON   &trans
 &trans   &kp TILDE    &kp QUESTION          &kp EXCL    &kp PRCNT  &kp AT_SIGN             &none   &none  &trans   &none   &none  &trans   &none   &none          &kp GRAVE  &kp BACKSLASH              &kp AMPS               &kp PIPE      &kp TILDE   &trans
 &trans      &trans          &trans            &trans       &trans                         &trans  &trans  &trans                  &trans  &trans  &trans                            &trans                &trans                 &trans         &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none   &none   &none  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             &none       &none   &none   &none   &none       &none       &none                   &none         &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_Movement {
            bindings = <
         &trans     &trans      &trans        &trans        &trans  &trans                   &trans                                                        &trans       &trans        &trans         &trans      &trans       &trans           &trans
        &kp TAB     &trans      &trans        &trans        &trans  &trans                   &trans                                                        &trans  &macro_redo  &macro_paste    &macro_copy  &macro_cut  &macro_undo           &trans
         &trans  &kp LCTRL  &kp LSHIFT  &kp LEFT_ALT  &kp LEFT_WIN  &trans                   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans      &kp TAB      &kp LEFT       &kp DOWN      &kp UP    &kp RIGHT           &trans
 &kp LEFT_SHIFT     &trans     &kp TAB       &kp TAB       &kp TAB  &trans                   &trans  &trans  &trans  &trans  &trans  &trans     &trans     &trans       &trans      &kp HOME  &kp PAGE_DOWN   &kp PG_UP      &kp END  &kp RIGHT_SHIFT
         &trans     &trans      &trans        &trans        &trans                    &kp BACKSPACE  &trans  &trans                  &trans  &kp ENTER  &kp SPACE                     &trans         &trans      &trans       &trans           &trans
            >;
        };

        layer_Gaming {
            bindings = <
         &trans          &kp N5  &kp N1  &kp N2  &kp N3  &kp N4               &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &kp TAB           &kp B   &kp Q   &kp W   &kp E   &kp R                &kp T                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &kp ESC  &kp LEFT_SHIFT   &kp A   &kp S   &kp D   &kp F                &kp G     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &kp LEFT_SHIFT       &kp LCTRL   &kp Z   &kp X   &kp C   &kp V               &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &trans          &trans  &trans  &trans  &trans                    &kp SPACE  &kp SPACE  &trans                  &trans   &none   &none          &trans  &trans  &trans  &tog 5  &trans
            >;
        };

    };
};
